-- Exportiere Struktur von Tabelle rki.covid19
CREATE TABLE IF NOT EXISTS `covid19` (
  `FID` int(6) unsigned NOT NULL COMMENT 'Id des Falles',
  `IdBundesland` int(2) unsigned DEFAULT NULL COMMENT 'Id des Bundeslands des Falles mit 1=Schleswig-Holstein bis 16=Thüringen',
  `Bundesland` varchar(44) DEFAULT NULL COMMENT 'Langtext des Bundeslandes',
  `Landkreis` varchar(44) DEFAULT NULL COMMENT 'Langtext des Landkreis',
  `Altersgruppe` varchar(9) DEFAULT NULL COMMENT 'Altersgruppe des Falles aus den 6 Gruppe 0-4, 5-14, 15-34, 35-59, 60-79, 80+ sowie unbekannt',
  `Geschlecht` varchar(9) DEFAULT NULL COMMENT 'Geschlecht des Falles M=männlich, W=weiblich und unbekannt',
  `AnzahlFall` int(1) DEFAULT NULL COMMENT 'Anzahl der Fälle in der entsprechenden Gruppe',
  `AnzahlTodesfall` int(1) DEFAULT NULL COMMENT 'Anzahl der Todesfälle in der entsprechenden Gruppe',
  `Meldedatum` varchar(24) DEFAULT NULL COMMENT 'Datum, wann der Fall dem Gesundheitsamt bekannt geworden ist',
  `IdLandkreis` varchar(5) DEFAULT NULL COMMENT 'Id des Landkreises des Falles in der üblichen Kodierung 1001 bis 16077=LK Altenburger Land',
  `Datenstand` varchar(22) NOT NULL COMMENT 'Datum, wann der Datensatz zuletzt aktualisiert worden ist',
  `NeuerFall` int(1) DEFAULT NULL COMMENT '0: Fall ist in der Publikation für den aktuellen Tag und in der für den Vortag enthalten; 1: Fall ist nur in der aktuellen Publikation enthalten; -1: Fall ist nur in der Publikation des Vortags enthalten damit ergibt sich: Anzahl Fälle der aktuellen Publikation als Summe(AnzahlFall), wenn NeuerFall in (0,1); Delta zum Vortag als Summe(AnzahlFall) wenn NeuerFall in (-1,1)',
  `NeuerTodesfall` int(1) DEFAULT NULL COMMENT '0: Fall ist in der Publikation für den aktuellen Tag und in der für den Vortag jeweils ein Todesfall; 1: Fall ist in der aktuellen Publikation ein Todesfall, nicht jedoch in der Publikation des Vortages; -1: Fall ist in der aktuellen Publikation kein Todesfall, jedoch war er in der Publikation des Vortags ein Todesfall; -9: Fall ist weder in der aktuellen Publikation noch in der des Vortages ein Todesfall damit ergibt sich: Anzahl Todesfälle der aktuellen Publikation als Summe(AnzahlTodesfall) wenn NeuerTodesfall in (0,1); Delta zum Vortag als Summe(AnzahlTodesfall) wenn NeuerTodesfall in (-1,1)',
  `Refdatum` varchar(24) DEFAULT NULL COMMENT 'Erkrankungsdatum bzw. wenn das nicht bekannt ist, das Meldedatum',
  `NeuGenesen` int(1) DEFAULT NULL COMMENT '0: Fall ist in der Publikation für den aktuellen Tag und in der für den Vortag jeweils Genesen;1: Fall ist in der aktuellen Publikation Genesen, nicht jedoch in der Publikation des Vortages; -1: Fall ist in der aktuellen Publikation nicht Genesen, jedoch war er in der Publikation des Vortags Genesen; -9: Fall ist weder in der aktuellen Publikation noch in der des Vortages Genesen; damit ergibt sich: Anzahl Genesen der aktuellen Publikation als Summe(AnzahlGenesen) wenn NeuGenesen in (0,1); Delta zum Vortag als Summe(AnzahlGenesen) wenn NeuGenesen in (-1,1)',
  `AnzahlGenesen` int(2) DEFAULT NULL COMMENT 'Anzahl der Genesenen in der entsprechenden Gruppe',
  `IstErkrankungsbeginn` int(1) unsigned DEFAULT NULL COMMENT '1, wenn das Refdatum der Erkrankungsbeginn ist, 0 sonst',
  `Altersgruppe2` varchar(17) DEFAULT NULL COMMENT 'Altersgruppe des Falles aus 5-Jahresgruppen 0-4, 5-9, 10-14, ..., 75-79, 80+ sowie unbekannt',
  PRIMARY KEY (`FID`,`Datenstand`) USING BTREE,
  KEY `idb_ntf` (`IdBundesland`,`NeuerTodesfall`),
  KEY `idb_nf` (`IdBundesland`,`NeuerFall`),
  KEY `idx_ntf` (`NeuerTodesfall`),
  KEY `idx_dat_nf` (`Datenstand`,`NeuerFall`),
  KEY `idx_dat_ntf` (`Datenstand`,`NeuerTodesfall`),
  KEY `idx_dat_ngen` (`Datenstand`,`NeuGenesen`),
  KEY `idx_dat_nf_alt` (`Datenstand`,`NeuerFall`,`Altersgruppe`),
  KEY `idx_dat_ntf_alt` (`Altersgruppe`,`NeuerTodesfall`,`Datenstand`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
